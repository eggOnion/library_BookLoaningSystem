package com.example.librarybookingsystem;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.ImportResource;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;


@SpringBootTest
@AutoConfigureMockMvc
//@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class LoadPeriodControllerTest {

    @Autowired
    private MockMvc mockMvc;
   
    @Test
    @DisplayName("Get loan status with Basic Authentication")
    public void getAllloanStatusTest() throws Exception {

        // Step 1: Build a GET request to /learners/{id}
        RequestBuilder request = MockMvcRequestBuilders.get("http://localhost:8080/loanStatus/")
                .header("Authorization",
                        "Basic " + java.util.Base64.getEncoder().encodeToString("user:password".getBytes()));

        // Step 2: Perform the request, get the response and assert
        mockMvc.perform(request)
                // Assert that the status code is 200
                .andExpect(status().isOk())
                // Assert that the content type is JSON
                .andExpect(content().contentType(MediaType.APPLICATION_JSON));                
    }

    @Test
    @DisplayName("Borrow a book")
    public void borrowBookTest() throws Exception {

        // Step 1: Build a GET request to /learners/{id}
        final int learner_id = 1;
        final int book_id = 1;
        RequestBuilder request = MockMvcRequestBuilders.post("http://localhost:8080/loanStatus/borrow/"+learner_id+"/"+book_id)
                .header("Authorization",
                        "Basic " + java.util.Base64.getEncoder().encodeToString("user:password".getBytes()));

        // Step 2: Perform the request, get the response and assert
        mockMvc.perform(request)
                // Assert that the status code is 200
                .andExpect(status().isOk())
                // Assert that the content type is JSON
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                // Assert that the id returned is 1
                .andExpect(jsonPath("$.id").value(1));            
    }    
}
